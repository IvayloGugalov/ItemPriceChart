// <auto-generated />
using ItemPriceCharts.Services.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ItemPriceCharts.Services.Migrations
{
    [DbContext(typeof(ModelsContext))]
    [Migration("20200805122158_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3");

            modelBuilder.Entity("ItemPriceCharts.Services.Models.EntityModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Title")
                        .HasColumnType("TEXT");

                    b.Property<string>("URL")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Entities");

                    b.HasDiscriminator<string>("Discriminator").HasValue("EntityModel");
                });

            modelBuilder.Entity("ItemPriceCharts.Services.Models.ItemModel", b =>
                {
                    b.HasBaseType("ItemPriceCharts.Services.Models.EntityModel");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<int>("OnlineShopId")
                        .HasColumnType("INTEGER");

                    b.Property<double>("Price")
                        .HasColumnType("REAL");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.HasIndex("OnlineShopId");

                    b.HasDiscriminator().HasValue("ItemModel");
                });

            modelBuilder.Entity("ItemPriceCharts.Services.Models.OnlineShopModel", b =>
                {
                    b.HasBaseType("ItemPriceCharts.Services.Models.EntityModel");

                    b.HasDiscriminator().HasValue("OnlineShopModel");
                });

            modelBuilder.Entity("ItemPriceCharts.Services.Models.ItemModel", b =>
                {
                    b.HasOne("ItemPriceCharts.Services.Models.OnlineShopModel", "OnlineShop")
                        .WithMany("Items")
                        .HasForeignKey("OnlineShopId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
