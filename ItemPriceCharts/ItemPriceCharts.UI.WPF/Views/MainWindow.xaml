<Window x:Class="ItemPriceCharts.UI.WPF.Views.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ItemPriceCharts.UI.WPF.ViewModels"
        xmlns:controls="clr-namespace:ItemPriceCharts.UI.WPF.Views.UserControls"
        xmlns:cv="clr-namespace:ItemPriceCharts.UI.WPF.Converters"
        xmlns:behaviors="clr-namespace:ItemPriceCharts.UI.WPF.Behaviors"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:custom="clr-namespace:ItemPriceCharts.UI.WPF.Controls"
        mc:Ignorable="d"
        WindowStartupLocation="CenterScreen"
        Topmost="True"
        MinHeight="576"
        MinWidth="1024">
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Closed">
            <i:InvokeCommandAction Command="{Binding Path=ClosedCommand}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <!-- Setting the DataContext here and in the ViewModel, as it is not picked up by the UserControl otherwise -->
        <controls:LogOutModalControl Grid.Column="0"
                                     Grid.ColumnSpan="2"
                                     Panel.ZIndex="10"
                                     DataContext="{Binding SideMenuViewModel}" />

        <!-- TODO: Find a more elegant way of setting up the user control without creating it before the view model is created, as the DataContext will initially be set to the MainViewModel -->
        <custom:Modal Grid.Column="0"
                      Grid.ColumnSpan="2"
                      Panel.ZIndex="9"
                      IsOpen="{Binding SideMenuViewModel.IsUserSettingsOpened}">
            <ContentControl Content="{Binding SideMenuViewModel.UserSettingsViewModel}" />
        </custom:Modal>

        <materialDesign:TransitioningContent Grid.Column="0"
                                             OpeningEffect="{materialDesign:TransitionEffect Kind=SlideInFromLeft}">
            <!-- Setting the DataContext here and in the ViewModel, as it is not picked up by the UserControl otherwise -->
            <controls:SideMenuView DataContext="{Binding SideMenuViewModel}" 
                                   behaviors:ResponsiveBehavior.IsResponsive="True"
                                   behaviors:ResponsiveBehavior.HorizontalBreakpoint="1600">

                <behaviors:ResponsiveBehavior.HorizontalBreakpointSetters>
                    <SetterBaseCollection>
                        <Setter Property="controls:SideMenuView.Width" Value="200" />
                    </SetterBaseCollection>
                </behaviors:ResponsiveBehavior.HorizontalBreakpointSetters>

            </controls:SideMenuView>
        </materialDesign:TransitioningContent>

        <Grid Grid.Column="1">
            <ContentControl Visibility="{Binding Path=IsNewViewDisplayed, Converter={cv:BoolToVisibilityConverter}}"
                            Content="{Binding CurrentView}"
                            Style="{StaticResource VisibleAnimation}"/>
        </Grid>
        
    </Grid>
</Window>